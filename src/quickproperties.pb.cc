// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quickproperties.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "quickproperties.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qps {
namespace pb {

namespace {

const ::google::protobuf::Descriptor* Property_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Property_reflection_ = NULL;
const ::google::protobuf::Descriptor* Properties_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Properties_reflection_ = NULL;
const ::google::protobuf::Descriptor* TimeStringMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TimeStringMap_reflection_ = NULL;
const ::google::protobuf::Descriptor* TimeStringMap_ValuesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TimeDoubleMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TimeDoubleMap_reflection_ = NULL;
const ::google::protobuf::Descriptor* TimeDoubleMap_ValuesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TimeValueMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TimeValueMap_reflection_ = NULL;
const ::google::protobuf::Descriptor* TimedProperties_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TimedProperties_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_quickproperties_2eproto() {
  protobuf_AddDesc_quickproperties_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "quickproperties.proto");
  GOOGLE_CHECK(file != NULL);
  Property_descriptor_ = file->message_type(0);
  static const int Property_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, value_),
  };
  Property_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Property_descriptor_,
      Property::default_instance_,
      Property_offsets_,
      -1,
      -1,
      -1,
      sizeof(Property),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, _is_default_instance_));
  Properties_descriptor_ = file->message_type(1);
  static const int Properties_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, object_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, hidden_static_properties_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, static_property_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, dynamic_property_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, properties_),
  };
  Properties_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Properties_descriptor_,
      Properties::default_instance_,
      Properties_offsets_,
      -1,
      -1,
      -1,
      sizeof(Properties),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, _is_default_instance_));
  TimeStringMap_descriptor_ = file->message_type(2);
  static const int TimeStringMap_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeStringMap, values_),
  };
  TimeStringMap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TimeStringMap_descriptor_,
      TimeStringMap::default_instance_,
      TimeStringMap_offsets_,
      -1,
      -1,
      -1,
      sizeof(TimeStringMap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeStringMap, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeStringMap, _is_default_instance_));
  TimeStringMap_ValuesEntry_descriptor_ = TimeStringMap_descriptor_->nested_type(0);
  TimeDoubleMap_descriptor_ = file->message_type(3);
  static const int TimeDoubleMap_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeDoubleMap, values_),
  };
  TimeDoubleMap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TimeDoubleMap_descriptor_,
      TimeDoubleMap::default_instance_,
      TimeDoubleMap_offsets_,
      -1,
      -1,
      -1,
      sizeof(TimeDoubleMap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeDoubleMap, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeDoubleMap, _is_default_instance_));
  TimeDoubleMap_ValuesEntry_descriptor_ = TimeDoubleMap_descriptor_->nested_type(0);
  TimeValueMap_descriptor_ = file->message_type(4);
  static const int TimeValueMap_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeValueMap, property_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeValueMap, property_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeValueMap, map_),
  };
  TimeValueMap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TimeValueMap_descriptor_,
      TimeValueMap::default_instance_,
      TimeValueMap_offsets_,
      -1,
      -1,
      -1,
      sizeof(TimeValueMap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeValueMap, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeValueMap, _is_default_instance_));
  TimedProperties_descriptor_ = file->message_type(5);
  static const int TimedProperties_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimedProperties, base_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimedProperties, first_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimedProperties, last_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimedProperties, tvms_),
  };
  TimedProperties_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TimedProperties_descriptor_,
      TimedProperties::default_instance_,
      TimedProperties_offsets_,
      -1,
      -1,
      -1,
      sizeof(TimedProperties),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimedProperties, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimedProperties, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_quickproperties_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Property_descriptor_, &Property::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Properties_descriptor_, &Properties::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TimeStringMap_descriptor_, &TimeStringMap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        TimeStringMap_ValuesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int64,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                TimeStringMap_ValuesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TimeDoubleMap_descriptor_, &TimeDoubleMap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        TimeDoubleMap_ValuesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int64,
            double,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
            ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
            0>::CreateDefaultInstance(
                TimeDoubleMap_ValuesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TimeValueMap_descriptor_, &TimeValueMap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TimedProperties_descriptor_, &TimedProperties::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_quickproperties_2eproto() {
  delete Property::default_instance_;
  delete Property_reflection_;
  delete Properties::default_instance_;
  delete Properties_reflection_;
  delete TimeStringMap::default_instance_;
  delete TimeStringMap_reflection_;
  delete TimeDoubleMap::default_instance_;
  delete TimeDoubleMap_reflection_;
  delete TimeValueMap::default_instance_;
  delete TimeValueMap_reflection_;
  delete TimedProperties::default_instance_;
  delete TimedProperties_reflection_;
}

void protobuf_AddDesc_quickproperties_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025quickproperties.proto\022\006qps.pb\032\031google/"
    "protobuf/any.proto\"5\n\010Property\022\014\n\004name\030\001"
    " \001(\t\022\014\n\004type\030\002 \001(\005\022\r\n\005value\030\003 \001(\t\"\256\001\n\nPr"
    "operties\022\023\n\013object_name\030\001 \001(\t\022&\n\036hidden_"
    "static_properties_count\030\002 \001(\005\022\035\n\025static_"
    "property_count\030\003 \001(\005\022\036\n\026dynamic_property"
    "_count\030\004 \001(\005\022$\n\nproperties\030\n \003(\0132\020.qps.p"
    "b.Property\"q\n\rTimeStringMap\0221\n\006values\030\001 "
    "\003(\0132!.qps.pb.TimeStringMap.ValuesEntry\032-"
    "\n\013ValuesEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001("
    "\t:\0028\001\"q\n\rTimeDoubleMap\0221\n\006values\030\001 \003(\0132!"
    ".qps.pb.TimeDoubleMap.ValuesEntry\032-\n\013Val"
    "uesEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\001:\0028\001"
    "\"_\n\014TimeValueMap\022\025\n\rproperty_name\030\001 \001(\t\022"
    "\025\n\rproperty_type\030\002 \001(\005\022!\n\003map\030* \001(\0132\024.go"
    "ogle.protobuf.Any\"t\n\017TimedProperties\022 \n\004"
    "base\030\001 \001(\0132\022.qps.pb.Properties\022\r\n\005first\030"
    "\002 \001(\003\022\014\n\004last\030\003 \001(\003\022\"\n\004tvms\030\n \003(\0132\024.qps."
    "pb.TimeValueMapb\006proto3", 743);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "quickproperties.proto", &protobuf_RegisterTypes);
  Property::default_instance_ = new Property();
  Properties::default_instance_ = new Properties();
  TimeStringMap::default_instance_ = new TimeStringMap();
  TimeDoubleMap::default_instance_ = new TimeDoubleMap();
  TimeValueMap::default_instance_ = new TimeValueMap();
  TimedProperties::default_instance_ = new TimedProperties();
  Property::default_instance_->InitAsDefaultInstance();
  Properties::default_instance_->InitAsDefaultInstance();
  TimeStringMap::default_instance_->InitAsDefaultInstance();
  TimeDoubleMap::default_instance_->InitAsDefaultInstance();
  TimeValueMap::default_instance_->InitAsDefaultInstance();
  TimedProperties::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_quickproperties_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_quickproperties_2eproto {
  StaticDescriptorInitializer_quickproperties_2eproto() {
    protobuf_AddDesc_quickproperties_2eproto();
  }
} static_descriptor_initializer_quickproperties_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Property::kNameFieldNumber;
const int Property::kTypeFieldNumber;
const int Property::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Property::Property()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:qps.pb.Property)
}

void Property::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Property::Property(const Property& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:qps.pb.Property)
}

void Property::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Property::~Property() {
  // @@protoc_insertion_point(destructor:qps.pb.Property)
  SharedDtor();
}

void Property::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Property::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Property::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Property_descriptor_;
}

const Property& Property::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quickproperties_2eproto();
  return *default_instance_;
}

Property* Property::default_instance_ = NULL;

Property* Property::New(::google::protobuf::Arena* arena) const {
  Property* n = new Property;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Property::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qps.pb.Property)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qps.pb.Property.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // optional string value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qps.pb.Property.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qps.pb.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qps.pb.Property)
  return false;
#undef DO_
}

void Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qps.pb.Property)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qps.pb.Property.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qps.pb.Property.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:qps.pb.Property)
}

::google::protobuf::uint8* Property::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qps.pb.Property)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qps.pb.Property.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qps.pb.Property.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qps.pb.Property)
  return target;
}

int Property::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Property::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Property* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Property>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Property::MergeFrom(const Property& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Property::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Property::CopyFrom(const Property& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Property::IsInitialized() const {

  return true;
}

void Property::Swap(Property* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Property::InternalSwap(Property* other) {
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Property::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Property_descriptor_;
  metadata.reflection = Property_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Property

// optional string name = 1;
void Property::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Property::name() const {
  // @@protoc_insertion_point(field_get:qps.pb.Property.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Property::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qps.pb.Property.name)
}
 void Property::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qps.pb.Property.name)
}
 void Property::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qps.pb.Property.name)
}
 ::std::string* Property::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:qps.pb.Property.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Property::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Property::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:qps.pb.Property.name)
}

// optional int32 type = 2;
void Property::clear_type() {
  type_ = 0;
}
 ::google::protobuf::int32 Property::type() const {
  // @@protoc_insertion_point(field_get:qps.pb.Property.type)
  return type_;
}
 void Property::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:qps.pb.Property.type)
}

// optional string value = 3;
void Property::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Property::value() const {
  // @@protoc_insertion_point(field_get:qps.pb.Property.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Property::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qps.pb.Property.value)
}
 void Property::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qps.pb.Property.value)
}
 void Property::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qps.pb.Property.value)
}
 ::std::string* Property::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:qps.pb.Property.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Property::release_value() {
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Property::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:qps.pb.Property.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Properties::kObjectNameFieldNumber;
const int Properties::kHiddenStaticPropertiesCountFieldNumber;
const int Properties::kStaticPropertyCountFieldNumber;
const int Properties::kDynamicPropertyCountFieldNumber;
const int Properties::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Properties::Properties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:qps.pb.Properties)
}

void Properties::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Properties::Properties(const Properties& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:qps.pb.Properties)
}

void Properties::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  object_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hidden_static_properties_count_ = 0;
  static_property_count_ = 0;
  dynamic_property_count_ = 0;
}

Properties::~Properties() {
  // @@protoc_insertion_point(destructor:qps.pb.Properties)
  SharedDtor();
}

void Properties::SharedDtor() {
  object_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Properties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Properties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Properties_descriptor_;
}

const Properties& Properties::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quickproperties_2eproto();
  return *default_instance_;
}

Properties* Properties::default_instance_ = NULL;

Properties* Properties::New(::google::protobuf::Arena* arena) const {
  Properties* n = new Properties;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Properties::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Properties*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(hidden_static_properties_count_, static_property_count_);
  object_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dynamic_property_count_ = 0;

#undef ZR_HELPER_
#undef ZR_

  properties_.Clear();
}

bool Properties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qps.pb.Properties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string object_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_name().data(), this->object_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qps.pb.Properties.object_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_hidden_static_properties_count;
        break;
      }

      // optional int32 hidden_static_properties_count = 2;
      case 2: {
        if (tag == 16) {
         parse_hidden_static_properties_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hidden_static_properties_count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_static_property_count;
        break;
      }

      // optional int32 static_property_count = 3;
      case 3: {
        if (tag == 24) {
         parse_static_property_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &static_property_count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dynamic_property_count;
        break;
      }

      // optional int32 dynamic_property_count = 4;
      case 4: {
        if (tag == 32) {
         parse_dynamic_property_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dynamic_property_count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_properties;
        break;
      }

      // repeated .qps.pb.Property properties = 10;
      case 10: {
        if (tag == 82) {
         parse_properties:
          DO_(input->IncrementRecursionDepth());
         parse_loop_properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_properties;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qps.pb.Properties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qps.pb.Properties)
  return false;
#undef DO_
}

void Properties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qps.pb.Properties)
  // optional string object_name = 1;
  if (this->object_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_name().data(), this->object_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qps.pb.Properties.object_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_name(), output);
  }

  // optional int32 hidden_static_properties_count = 2;
  if (this->hidden_static_properties_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hidden_static_properties_count(), output);
  }

  // optional int32 static_property_count = 3;
  if (this->static_property_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->static_property_count(), output);
  }

  // optional int32 dynamic_property_count = 4;
  if (this->dynamic_property_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dynamic_property_count(), output);
  }

  // repeated .qps.pb.Property properties = 10;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->properties(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qps.pb.Properties)
}

::google::protobuf::uint8* Properties::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qps.pb.Properties)
  // optional string object_name = 1;
  if (this->object_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_name().data(), this->object_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qps.pb.Properties.object_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_name(), target);
  }

  // optional int32 hidden_static_properties_count = 2;
  if (this->hidden_static_properties_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hidden_static_properties_count(), target);
  }

  // optional int32 static_property_count = 3;
  if (this->static_property_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->static_property_count(), target);
  }

  // optional int32 dynamic_property_count = 4;
  if (this->dynamic_property_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dynamic_property_count(), target);
  }

  // repeated .qps.pb.Property properties = 10;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->properties(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qps.pb.Properties)
  return target;
}

int Properties::ByteSize() const {
  int total_size = 0;

  // optional string object_name = 1;
  if (this->object_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_name());
  }

  // optional int32 hidden_static_properties_count = 2;
  if (this->hidden_static_properties_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hidden_static_properties_count());
  }

  // optional int32 static_property_count = 3;
  if (this->static_property_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->static_property_count());
  }

  // optional int32 dynamic_property_count = 4;
  if (this->dynamic_property_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dynamic_property_count());
  }

  // repeated .qps.pb.Property properties = 10;
  total_size += 1 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Properties::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Properties* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Properties>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Properties::MergeFrom(const Properties& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  properties_.MergeFrom(from.properties_);
  if (from.object_name().size() > 0) {

    object_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_name_);
  }
  if (from.hidden_static_properties_count() != 0) {
    set_hidden_static_properties_count(from.hidden_static_properties_count());
  }
  if (from.static_property_count() != 0) {
    set_static_property_count(from.static_property_count());
  }
  if (from.dynamic_property_count() != 0) {
    set_dynamic_property_count(from.dynamic_property_count());
  }
}

void Properties::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties::CopyFrom(const Properties& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties::IsInitialized() const {

  return true;
}

void Properties::Swap(Properties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Properties::InternalSwap(Properties* other) {
  object_name_.Swap(&other->object_name_);
  std::swap(hidden_static_properties_count_, other->hidden_static_properties_count_);
  std::swap(static_property_count_, other->static_property_count_);
  std::swap(dynamic_property_count_, other->dynamic_property_count_);
  properties_.UnsafeArenaSwap(&other->properties_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Properties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Properties_descriptor_;
  metadata.reflection = Properties_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Properties

// optional string object_name = 1;
void Properties::clear_object_name() {
  object_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Properties::object_name() const {
  // @@protoc_insertion_point(field_get:qps.pb.Properties.object_name)
  return object_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Properties::set_object_name(const ::std::string& value) {
  
  object_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qps.pb.Properties.object_name)
}
 void Properties::set_object_name(const char* value) {
  
  object_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qps.pb.Properties.object_name)
}
 void Properties::set_object_name(const char* value, size_t size) {
  
  object_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qps.pb.Properties.object_name)
}
 ::std::string* Properties::mutable_object_name() {
  
  // @@protoc_insertion_point(field_mutable:qps.pb.Properties.object_name)
  return object_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Properties::release_object_name() {
  
  return object_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Properties::set_allocated_object_name(::std::string* object_name) {
  if (object_name != NULL) {
    
  } else {
    
  }
  object_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_name);
  // @@protoc_insertion_point(field_set_allocated:qps.pb.Properties.object_name)
}

// optional int32 hidden_static_properties_count = 2;
void Properties::clear_hidden_static_properties_count() {
  hidden_static_properties_count_ = 0;
}
 ::google::protobuf::int32 Properties::hidden_static_properties_count() const {
  // @@protoc_insertion_point(field_get:qps.pb.Properties.hidden_static_properties_count)
  return hidden_static_properties_count_;
}
 void Properties::set_hidden_static_properties_count(::google::protobuf::int32 value) {
  
  hidden_static_properties_count_ = value;
  // @@protoc_insertion_point(field_set:qps.pb.Properties.hidden_static_properties_count)
}

// optional int32 static_property_count = 3;
void Properties::clear_static_property_count() {
  static_property_count_ = 0;
}
 ::google::protobuf::int32 Properties::static_property_count() const {
  // @@protoc_insertion_point(field_get:qps.pb.Properties.static_property_count)
  return static_property_count_;
}
 void Properties::set_static_property_count(::google::protobuf::int32 value) {
  
  static_property_count_ = value;
  // @@protoc_insertion_point(field_set:qps.pb.Properties.static_property_count)
}

// optional int32 dynamic_property_count = 4;
void Properties::clear_dynamic_property_count() {
  dynamic_property_count_ = 0;
}
 ::google::protobuf::int32 Properties::dynamic_property_count() const {
  // @@protoc_insertion_point(field_get:qps.pb.Properties.dynamic_property_count)
  return dynamic_property_count_;
}
 void Properties::set_dynamic_property_count(::google::protobuf::int32 value) {
  
  dynamic_property_count_ = value;
  // @@protoc_insertion_point(field_set:qps.pb.Properties.dynamic_property_count)
}

// repeated .qps.pb.Property properties = 10;
int Properties::properties_size() const {
  return properties_.size();
}
void Properties::clear_properties() {
  properties_.Clear();
}
const ::qps::pb::Property& Properties::properties(int index) const {
  // @@protoc_insertion_point(field_get:qps.pb.Properties.properties)
  return properties_.Get(index);
}
::qps::pb::Property* Properties::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:qps.pb.Properties.properties)
  return properties_.Mutable(index);
}
::qps::pb::Property* Properties::add_properties() {
  // @@protoc_insertion_point(field_add:qps.pb.Properties.properties)
  return properties_.Add();
}
::google::protobuf::RepeatedPtrField< ::qps::pb::Property >*
Properties::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:qps.pb.Properties.properties)
  return &properties_;
}
const ::google::protobuf::RepeatedPtrField< ::qps::pb::Property >&
Properties::properties() const {
  // @@protoc_insertion_point(field_list:qps.pb.Properties.properties)
  return properties_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeStringMap::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeStringMap::TimeStringMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:qps.pb.TimeStringMap)
}

void TimeStringMap::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TimeStringMap::TimeStringMap(const TimeStringMap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:qps.pb.TimeStringMap)
}

void TimeStringMap::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  values_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  values_.SetEntryDescriptor(
      &::qps::pb::TimeStringMap_ValuesEntry_descriptor_);
}

TimeStringMap::~TimeStringMap() {
  // @@protoc_insertion_point(destructor:qps.pb.TimeStringMap)
  SharedDtor();
}

void TimeStringMap::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TimeStringMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeStringMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TimeStringMap_descriptor_;
}

const TimeStringMap& TimeStringMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quickproperties_2eproto();
  return *default_instance_;
}

TimeStringMap* TimeStringMap::default_instance_ = NULL;

TimeStringMap* TimeStringMap::New(::google::protobuf::Arena* arena) const {
  TimeStringMap* n = new TimeStringMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeStringMap::Clear() {
  values_.Clear();
}

bool TimeStringMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qps.pb.TimeStringMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int64, string> values = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_values:
          ::google::protobuf::scoped_ptr<TimeStringMap_ValuesEntry> entry(values_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_values())[entry->key()] = *entry->mutable_value();
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry->mutable_value()->data(),
            entry->mutable_value()->length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qps.pb.TimeStringMap.ValuesEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_values;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qps.pb.TimeStringMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qps.pb.TimeStringMap)
  return false;
#undef DO_
}

void TimeStringMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qps.pb.TimeStringMap)
  // map<int64, string> values = 1;
  {
    ::google::protobuf::scoped_ptr<TimeStringMap_ValuesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
        it = this->values().begin();
        it != this->values().end(); ++it) {
      entry.reset(values_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          1, *entry, output);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->second.data(), it->second.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "qps.pb.TimeStringMap.ValuesEntry.value");
    }
  }

  // @@protoc_insertion_point(serialize_end:qps.pb.TimeStringMap)
}

::google::protobuf::uint8* TimeStringMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qps.pb.TimeStringMap)
  // map<int64, string> values = 1;
  {
    ::google::protobuf::scoped_ptr<TimeStringMap_ValuesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
        it = this->values().begin();
        it != this->values().end(); ++it) {
      entry.reset(values_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              1, *entry, target);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->second.data(), it->second.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "qps.pb.TimeStringMap.ValuesEntry.value");
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:qps.pb.TimeStringMap)
  return target;
}

int TimeStringMap::ByteSize() const {
  int total_size = 0;

  // map<int64, string> values = 1;
  total_size += 1 * this->values_size();
  {
    ::google::protobuf::scoped_ptr<TimeStringMap_ValuesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
        it = this->values().begin();
        it != this->values().end(); ++it) {
      entry.reset(values_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeStringMap::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TimeStringMap* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeStringMap>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TimeStringMap::MergeFrom(const TimeStringMap& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  values_.MergeFrom(from.values_);
}

void TimeStringMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeStringMap::CopyFrom(const TimeStringMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeStringMap::IsInitialized() const {

  return true;
}

void TimeStringMap::Swap(TimeStringMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeStringMap::InternalSwap(TimeStringMap* other) {
  values_.Swap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeStringMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TimeStringMap_descriptor_;
  metadata.reflection = TimeStringMap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimeStringMap

// map<int64, string> values = 1;
int TimeStringMap::values_size() const {
  return values_.size();
}
void TimeStringMap::clear_values() {
  values_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >&
TimeStringMap::values() const {
  // @@protoc_insertion_point(field_map:qps.pb.TimeStringMap.values)
  return values_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >*
TimeStringMap::mutable_values() {
  // @@protoc_insertion_point(field_mutable_map:qps.pb.TimeStringMap.values)
  return values_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeDoubleMap::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeDoubleMap::TimeDoubleMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:qps.pb.TimeDoubleMap)
}

void TimeDoubleMap::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TimeDoubleMap::TimeDoubleMap(const TimeDoubleMap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:qps.pb.TimeDoubleMap)
}

void TimeDoubleMap::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  values_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  values_.SetEntryDescriptor(
      &::qps::pb::TimeDoubleMap_ValuesEntry_descriptor_);
}

TimeDoubleMap::~TimeDoubleMap() {
  // @@protoc_insertion_point(destructor:qps.pb.TimeDoubleMap)
  SharedDtor();
}

void TimeDoubleMap::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TimeDoubleMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeDoubleMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TimeDoubleMap_descriptor_;
}

const TimeDoubleMap& TimeDoubleMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quickproperties_2eproto();
  return *default_instance_;
}

TimeDoubleMap* TimeDoubleMap::default_instance_ = NULL;

TimeDoubleMap* TimeDoubleMap::New(::google::protobuf::Arena* arena) const {
  TimeDoubleMap* n = new TimeDoubleMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeDoubleMap::Clear() {
  values_.Clear();
}

bool TimeDoubleMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qps.pb.TimeDoubleMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int64, double> values = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_values:
          ::google::protobuf::scoped_ptr<TimeDoubleMap_ValuesEntry> entry(values_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_values())[entry->key()] = *entry->mutable_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_values;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qps.pb.TimeDoubleMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qps.pb.TimeDoubleMap)
  return false;
#undef DO_
}

void TimeDoubleMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qps.pb.TimeDoubleMap)
  // map<int64, double> values = 1;
  {
    ::google::protobuf::scoped_ptr<TimeDoubleMap_ValuesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, double >::const_iterator
        it = this->values().begin();
        it != this->values().end(); ++it) {
      entry.reset(values_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          1, *entry, output);
    }
  }

  // @@protoc_insertion_point(serialize_end:qps.pb.TimeDoubleMap)
}

::google::protobuf::uint8* TimeDoubleMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qps.pb.TimeDoubleMap)
  // map<int64, double> values = 1;
  {
    ::google::protobuf::scoped_ptr<TimeDoubleMap_ValuesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, double >::const_iterator
        it = this->values().begin();
        it != this->values().end(); ++it) {
      entry.reset(values_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              1, *entry, target);
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:qps.pb.TimeDoubleMap)
  return target;
}

int TimeDoubleMap::ByteSize() const {
  int total_size = 0;

  // map<int64, double> values = 1;
  total_size += 1 * this->values_size();
  {
    ::google::protobuf::scoped_ptr<TimeDoubleMap_ValuesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, double >::const_iterator
        it = this->values().begin();
        it != this->values().end(); ++it) {
      entry.reset(values_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeDoubleMap::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TimeDoubleMap* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeDoubleMap>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TimeDoubleMap::MergeFrom(const TimeDoubleMap& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  values_.MergeFrom(from.values_);
}

void TimeDoubleMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeDoubleMap::CopyFrom(const TimeDoubleMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeDoubleMap::IsInitialized() const {

  return true;
}

void TimeDoubleMap::Swap(TimeDoubleMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeDoubleMap::InternalSwap(TimeDoubleMap* other) {
  values_.Swap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeDoubleMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TimeDoubleMap_descriptor_;
  metadata.reflection = TimeDoubleMap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimeDoubleMap

// map<int64, double> values = 1;
int TimeDoubleMap::values_size() const {
  return values_.size();
}
void TimeDoubleMap::clear_values() {
  values_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int64, double >&
TimeDoubleMap::values() const {
  // @@protoc_insertion_point(field_map:qps.pb.TimeDoubleMap.values)
  return values_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int64, double >*
TimeDoubleMap::mutable_values() {
  // @@protoc_insertion_point(field_mutable_map:qps.pb.TimeDoubleMap.values)
  return values_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeValueMap::kPropertyNameFieldNumber;
const int TimeValueMap::kPropertyTypeFieldNumber;
const int TimeValueMap::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeValueMap::TimeValueMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:qps.pb.TimeValueMap)
}

void TimeValueMap::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  map_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

TimeValueMap::TimeValueMap(const TimeValueMap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:qps.pb.TimeValueMap)
}

void TimeValueMap::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_type_ = 0;
  map_ = NULL;
}

TimeValueMap::~TimeValueMap() {
  // @@protoc_insertion_point(destructor:qps.pb.TimeValueMap)
  SharedDtor();
}

void TimeValueMap::SharedDtor() {
  property_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete map_;
  }
}

void TimeValueMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeValueMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TimeValueMap_descriptor_;
}

const TimeValueMap& TimeValueMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quickproperties_2eproto();
  return *default_instance_;
}

TimeValueMap* TimeValueMap::default_instance_ = NULL;

TimeValueMap* TimeValueMap::New(::google::protobuf::Arena* arena) const {
  TimeValueMap* n = new TimeValueMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeValueMap::Clear() {
  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_type_ = 0;
  if (GetArenaNoVirtual() == NULL && map_ != NULL) delete map_;
  map_ = NULL;
}

bool TimeValueMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qps.pb.TimeValueMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string property_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_property_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->property_name().data(), this->property_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qps.pb.TimeValueMap.property_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_property_type;
        break;
      }

      // optional int32 property_type = 2;
      case 2: {
        if (tag == 16) {
         parse_property_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &property_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(338)) goto parse_map;
        break;
      }

      // optional .google.protobuf.Any map = 42;
      case 42: {
        if (tag == 338) {
         parse_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qps.pb.TimeValueMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qps.pb.TimeValueMap)
  return false;
#undef DO_
}

void TimeValueMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qps.pb.TimeValueMap)
  // optional string property_name = 1;
  if (this->property_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->property_name().data(), this->property_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qps.pb.TimeValueMap.property_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->property_name(), output);
  }

  // optional int32 property_type = 2;
  if (this->property_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->property_type(), output);
  }

  // optional .google.protobuf.Any map = 42;
  if (this->has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, *this->map_, output);
  }

  // @@protoc_insertion_point(serialize_end:qps.pb.TimeValueMap)
}

::google::protobuf::uint8* TimeValueMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qps.pb.TimeValueMap)
  // optional string property_name = 1;
  if (this->property_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->property_name().data(), this->property_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qps.pb.TimeValueMap.property_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->property_name(), target);
  }

  // optional int32 property_type = 2;
  if (this->property_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->property_type(), target);
  }

  // optional .google.protobuf.Any map = 42;
  if (this->has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        42, *this->map_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qps.pb.TimeValueMap)
  return target;
}

int TimeValueMap::ByteSize() const {
  int total_size = 0;

  // optional string property_name = 1;
  if (this->property_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->property_name());
  }

  // optional int32 property_type = 2;
  if (this->property_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->property_type());
  }

  // optional .google.protobuf.Any map = 42;
  if (this->has_map()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->map_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeValueMap::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TimeValueMap* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeValueMap>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TimeValueMap::MergeFrom(const TimeValueMap& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.property_name().size() > 0) {

    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.property_type() != 0) {
    set_property_type(from.property_type());
  }
  if (from.has_map()) {
    mutable_map()->::google::protobuf::Any::MergeFrom(from.map());
  }
}

void TimeValueMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeValueMap::CopyFrom(const TimeValueMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeValueMap::IsInitialized() const {

  return true;
}

void TimeValueMap::Swap(TimeValueMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeValueMap::InternalSwap(TimeValueMap* other) {
  property_name_.Swap(&other->property_name_);
  std::swap(property_type_, other->property_type_);
  std::swap(map_, other->map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeValueMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TimeValueMap_descriptor_;
  metadata.reflection = TimeValueMap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimeValueMap

// optional string property_name = 1;
void TimeValueMap::clear_property_name() {
  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TimeValueMap::property_name() const {
  // @@protoc_insertion_point(field_get:qps.pb.TimeValueMap.property_name)
  return property_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TimeValueMap::set_property_name(const ::std::string& value) {
  
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qps.pb.TimeValueMap.property_name)
}
 void TimeValueMap::set_property_name(const char* value) {
  
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qps.pb.TimeValueMap.property_name)
}
 void TimeValueMap::set_property_name(const char* value, size_t size) {
  
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qps.pb.TimeValueMap.property_name)
}
 ::std::string* TimeValueMap::mutable_property_name() {
  
  // @@protoc_insertion_point(field_mutable:qps.pb.TimeValueMap.property_name)
  return property_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TimeValueMap::release_property_name() {
  
  return property_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TimeValueMap::set_allocated_property_name(::std::string* property_name) {
  if (property_name != NULL) {
    
  } else {
    
  }
  property_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), property_name);
  // @@protoc_insertion_point(field_set_allocated:qps.pb.TimeValueMap.property_name)
}

// optional int32 property_type = 2;
void TimeValueMap::clear_property_type() {
  property_type_ = 0;
}
 ::google::protobuf::int32 TimeValueMap::property_type() const {
  // @@protoc_insertion_point(field_get:qps.pb.TimeValueMap.property_type)
  return property_type_;
}
 void TimeValueMap::set_property_type(::google::protobuf::int32 value) {
  
  property_type_ = value;
  // @@protoc_insertion_point(field_set:qps.pb.TimeValueMap.property_type)
}

// optional .google.protobuf.Any map = 42;
bool TimeValueMap::has_map() const {
  return !_is_default_instance_ && map_ != NULL;
}
void TimeValueMap::clear_map() {
  if (GetArenaNoVirtual() == NULL && map_ != NULL) delete map_;
  map_ = NULL;
}
const ::google::protobuf::Any& TimeValueMap::map() const {
  // @@protoc_insertion_point(field_get:qps.pb.TimeValueMap.map)
  return map_ != NULL ? *map_ : *default_instance_->map_;
}
::google::protobuf::Any* TimeValueMap::mutable_map() {
  
  if (map_ == NULL) {
    map_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:qps.pb.TimeValueMap.map)
  return map_;
}
::google::protobuf::Any* TimeValueMap::release_map() {
  
  ::google::protobuf::Any* temp = map_;
  map_ = NULL;
  return temp;
}
void TimeValueMap::set_allocated_map(::google::protobuf::Any* map) {
  delete map_;
  map_ = map;
  if (map) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:qps.pb.TimeValueMap.map)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimedProperties::kBaseFieldNumber;
const int TimedProperties::kFirstFieldNumber;
const int TimedProperties::kLastFieldNumber;
const int TimedProperties::kTvmsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimedProperties::TimedProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:qps.pb.TimedProperties)
}

void TimedProperties::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  base_ = const_cast< ::qps::pb::Properties*>(&::qps::pb::Properties::default_instance());
}

TimedProperties::TimedProperties(const TimedProperties& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:qps.pb.TimedProperties)
}

void TimedProperties::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  base_ = NULL;
  first_ = GOOGLE_LONGLONG(0);
  last_ = GOOGLE_LONGLONG(0);
}

TimedProperties::~TimedProperties() {
  // @@protoc_insertion_point(destructor:qps.pb.TimedProperties)
  SharedDtor();
}

void TimedProperties::SharedDtor() {
  if (this != default_instance_) {
    delete base_;
  }
}

void TimedProperties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimedProperties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TimedProperties_descriptor_;
}

const TimedProperties& TimedProperties::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_quickproperties_2eproto();
  return *default_instance_;
}

TimedProperties* TimedProperties::default_instance_ = NULL;

TimedProperties* TimedProperties::New(::google::protobuf::Arena* arena) const {
  TimedProperties* n = new TimedProperties;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimedProperties::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TimedProperties*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(first_, last_);
  if (GetArenaNoVirtual() == NULL && base_ != NULL) delete base_;
  base_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  tvms_.Clear();
}

bool TimedProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qps.pb.TimedProperties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .qps.pb.Properties base = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_first;
        break;
      }

      // optional int64 first = 2;
      case 2: {
        if (tag == 16) {
         parse_first:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &first_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_last;
        break;
      }

      // optional int64 last = 3;
      case 3: {
        if (tag == 24) {
         parse_last:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_tvms;
        break;
      }

      // repeated .qps.pb.TimeValueMap tvms = 10;
      case 10: {
        if (tag == 82) {
         parse_tvms:
          DO_(input->IncrementRecursionDepth());
         parse_loop_tvms:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tvms()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_tvms;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qps.pb.TimedProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qps.pb.TimedProperties)
  return false;
#undef DO_
}

void TimedProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qps.pb.TimedProperties)
  // optional .qps.pb.Properties base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->base_, output);
  }

  // optional int64 first = 2;
  if (this->first() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->first(), output);
  }

  // optional int64 last = 3;
  if (this->last() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->last(), output);
  }

  // repeated .qps.pb.TimeValueMap tvms = 10;
  for (unsigned int i = 0, n = this->tvms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->tvms(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qps.pb.TimedProperties)
}

::google::protobuf::uint8* TimedProperties::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:qps.pb.TimedProperties)
  // optional .qps.pb.Properties base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->base_, target);
  }

  // optional int64 first = 2;
  if (this->first() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->first(), target);
  }

  // optional int64 last = 3;
  if (this->last() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->last(), target);
  }

  // repeated .qps.pb.TimeValueMap tvms = 10;
  for (unsigned int i = 0, n = this->tvms_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->tvms(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qps.pb.TimedProperties)
  return target;
}

int TimedProperties::ByteSize() const {
  int total_size = 0;

  // optional .qps.pb.Properties base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->base_);
  }

  // optional int64 first = 2;
  if (this->first() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->first());
  }

  // optional int64 last = 3;
  if (this->last() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->last());
  }

  // repeated .qps.pb.TimeValueMap tvms = 10;
  total_size += 1 * this->tvms_size();
  for (int i = 0; i < this->tvms_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tvms(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimedProperties::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TimedProperties* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TimedProperties>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TimedProperties::MergeFrom(const TimedProperties& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  tvms_.MergeFrom(from.tvms_);
  if (from.has_base()) {
    mutable_base()->::qps::pb::Properties::MergeFrom(from.base());
  }
  if (from.first() != 0) {
    set_first(from.first());
  }
  if (from.last() != 0) {
    set_last(from.last());
  }
}

void TimedProperties::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimedProperties::CopyFrom(const TimedProperties& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimedProperties::IsInitialized() const {

  return true;
}

void TimedProperties::Swap(TimedProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimedProperties::InternalSwap(TimedProperties* other) {
  std::swap(base_, other->base_);
  std::swap(first_, other->first_);
  std::swap(last_, other->last_);
  tvms_.UnsafeArenaSwap(&other->tvms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimedProperties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TimedProperties_descriptor_;
  metadata.reflection = TimedProperties_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimedProperties

// optional .qps.pb.Properties base = 1;
bool TimedProperties::has_base() const {
  return !_is_default_instance_ && base_ != NULL;
}
void TimedProperties::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) delete base_;
  base_ = NULL;
}
const ::qps::pb::Properties& TimedProperties::base() const {
  // @@protoc_insertion_point(field_get:qps.pb.TimedProperties.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
::qps::pb::Properties* TimedProperties::mutable_base() {
  
  if (base_ == NULL) {
    base_ = new ::qps::pb::Properties;
  }
  // @@protoc_insertion_point(field_mutable:qps.pb.TimedProperties.base)
  return base_;
}
::qps::pb::Properties* TimedProperties::release_base() {
  
  ::qps::pb::Properties* temp = base_;
  base_ = NULL;
  return temp;
}
void TimedProperties::set_allocated_base(::qps::pb::Properties* base) {
  delete base_;
  base_ = base;
  if (base) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:qps.pb.TimedProperties.base)
}

// optional int64 first = 2;
void TimedProperties::clear_first() {
  first_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TimedProperties::first() const {
  // @@protoc_insertion_point(field_get:qps.pb.TimedProperties.first)
  return first_;
}
 void TimedProperties::set_first(::google::protobuf::int64 value) {
  
  first_ = value;
  // @@protoc_insertion_point(field_set:qps.pb.TimedProperties.first)
}

// optional int64 last = 3;
void TimedProperties::clear_last() {
  last_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TimedProperties::last() const {
  // @@protoc_insertion_point(field_get:qps.pb.TimedProperties.last)
  return last_;
}
 void TimedProperties::set_last(::google::protobuf::int64 value) {
  
  last_ = value;
  // @@protoc_insertion_point(field_set:qps.pb.TimedProperties.last)
}

// repeated .qps.pb.TimeValueMap tvms = 10;
int TimedProperties::tvms_size() const {
  return tvms_.size();
}
void TimedProperties::clear_tvms() {
  tvms_.Clear();
}
const ::qps::pb::TimeValueMap& TimedProperties::tvms(int index) const {
  // @@protoc_insertion_point(field_get:qps.pb.TimedProperties.tvms)
  return tvms_.Get(index);
}
::qps::pb::TimeValueMap* TimedProperties::mutable_tvms(int index) {
  // @@protoc_insertion_point(field_mutable:qps.pb.TimedProperties.tvms)
  return tvms_.Mutable(index);
}
::qps::pb::TimeValueMap* TimedProperties::add_tvms() {
  // @@protoc_insertion_point(field_add:qps.pb.TimedProperties.tvms)
  return tvms_.Add();
}
::google::protobuf::RepeatedPtrField< ::qps::pb::TimeValueMap >*
TimedProperties::mutable_tvms() {
  // @@protoc_insertion_point(field_mutable_list:qps.pb.TimedProperties.tvms)
  return &tvms_;
}
const ::google::protobuf::RepeatedPtrField< ::qps::pb::TimeValueMap >&
TimedProperties::tvms() const {
  // @@protoc_insertion_point(field_list:qps.pb.TimedProperties.tvms)
  return tvms_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace qps

// @@protoc_insertion_point(global_scope)
